// This is your Prisma schema file,
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  phoneNumber    String  @unique
  hashedRt String? @db.String

  username String @unique
  password String

  startedTasks UserTask[]

  role Role @default(USER)

  @@map("users")
}

enum UserTaskStatus {
  STARTED
  IN_PROGRESS
  COMPLETED
}

model UserTask {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  userId String

  task Task @relation(fields: [taskId], references: [id])
  taskId String

  status UserTaskStatus

  clearedLocations ClearedLocation[]

  @@map("user_active_tasks")
}

model Task {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  description String

  locations TaskLocation[]
  userActiveTasks UserTask[]

  @@map("tasks")
}

model TaskLocation {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  placeName String
  details String
  latitude Float
  longitude Float

  task Task @relation(fields: [taskId], references: [id])
  taskId String

  clearedLocations ClearedLocation[]

  @@map("task_locations")
}

model ClearedLocation {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userTask UserTask @relation(fields: [userTaskId], references: [id])
  userTaskId String

  taskLocation TaskLocation @relation(fields: [taskLocationId], references: [id])
  taskLocationId String

  @@map("cleared_locations")
}
